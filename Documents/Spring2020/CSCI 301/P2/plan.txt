Ella Neumann | Project 1 Game Plan

1. The program contains a function predicate-logic that takes in 3 parameters. 
The first parameter is a list of parameters for a given expression also called the "universe". 
The second parameter is a list that the user inputs when they call predicate-logic that has either
'forall or 'exists for the number of parameters in the expresion. 
The final parameter is te expression that will be applied itself. 
The function has 10 different expressions that can be parameters in predicate-logic. 
There are also predicate functions that are used inside of expressions. 
Definitions are used to test expressions to see if they are true or false.   

2. I anticipate the most challenging aspect of the assignment to be implementing predicate-logic 
and wrapping my head around how everything pieces together. 
Also, it could be tricky knowing exactly how to use Racket to implement predicate-logic. 
I heard rumors about curry and it may be tricky to understand and implement. 

3. 
- Run the expression given as a parameter with each of the inputs
       > Use map to map the trues and falses to a list of booleans
       > Keep track of which parameters are lumped together using curry
- Apply for all and there exists
       > Use if else statements, one for for all and one for there exists
- In the for all if statement, use and to compare Fs and Ts.
       > If all of the booleans in the list are true, return true, else return false
- In the there exists statement, use or to compare the Fs and Ts.
       > If one of the booleans in the list are true, return true, else return false


4. Office hours from Hutch and TAs, mentor hours, buddies in the class
